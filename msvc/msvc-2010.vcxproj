<?xml version="1.0" encoding="utf-8"?>
<Project InitialTargets="UNDUPOBJ" DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug-2015|Win32">
      <Configuration>Debug-2015</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectName>mednafen_psx_libretro</ProjectName>
    <ProjectGuid>{A9C675CC-DDF4-4BC5-A212-25AE2465D253}</ProjectGuid>
    <RootNamespace>mednafen_psx_libretro</RootNamespace>
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.40219.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Debug\</OutDir>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Debug\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">Debug\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">true</LinkIncremental>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Release\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'" />
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)..;$(SolutionDir)..\libretro-common\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>HAVE_OPENGL=1;WIN32;_DEBUG;_WINDOWS;_USRDLL;LIBRETROPSX_EXPORTS;WANT_THREADING;WANT_32BPP;__LIBRETRO__;WANT_NEW_API;NEED_TREMOR;NEED_DEINTERLACER;NEED_CD;MEDNAFEN_VERSION_NUMERIC=9361;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)mednafen_psx_libretro.dll</OutputFile>
      <ModuleDefinitionFile>libretro.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ProgramDatabaseFile>$(OutDir)mednafen_psx_libretro.pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)mednafen_psx_libretro.lib</ImportLibrary>
      <TargetMachine>MachineX86</TargetMachine>
      <AdditionalDependencies>opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)..;$(SolutionDir)..\libretro-common\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>HAVE_OPENGL=1;WIN32;_DEBUG;_WINDOWS;_USRDLL;LIBRETROPSX_EXPORTS;WANT_THREADING;WANT_32BPP;__LIBRETRO__;WANT_NEW_API;NEED_TREMOR;NEED_DEINTERLACER;NEED_CD;MEDNAFEN_VERSION_NUMERIC=9361;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)mednafen_psx_libretro.dll</OutputFile>
      <ModuleDefinitionFile>libretro.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ProgramDatabaseFile>$(OutDir)mednafen_psx_libretro.pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)mednafen_psx_libretro.lib</ImportLibrary>
      <TargetMachine>MachineX86</TargetMachine>
      <AdditionalDependencies>opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)..;$(SolutionDir)..\libretro-common\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>HAVE_OPENGL=1;WIN32;NDEBUG;_WINDOWS;_USRDLL;LIBRETROPSX_EXPORTS;WANT_THREADING;WANT_32BPP;__LIBRETRO__;WANT_NEW_API;NEED_TREMOR;NEED_DEINTERLACER;NEED_CD;MEDNAFEN_VERSION_NUMERIC=9361;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)mednafen_psx_libretro.dll</OutputFile>
      <ModuleDefinitionFile>libretro.def</ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <ImportLibrary>$(OutDir)mednafen_psx_libretro.lib</ImportLibrary>
      <TargetMachine>MachineX86</TargetMachine>
      <AdditionalDependencies>opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\libretro-common\glsm\glsm.c" />
    <ClCompile Include="..\libretro-common\glsym\glsym_gl.c" />
    <ClCompile Include="..\libretro-common\glsym\rglgen.c" />
    <ClCompile Include="..\libretro.cpp" />
    <ClCompile Include="..\rsx\rsx_intf.cpp" />
    <ClCompile Include="..\rsx\rsx_lib_gl.cpp" />
    <ClCompile Include="..\rsx\rsx_lib_soft.c" />
    <ClCompile Include="..\rustation-libretro\src\renderer\GlRenderer.cpp" />
    <ClCompile Include="..\rustation-libretro\src\retrogl\error.cpp" />
    <ClCompile Include="..\rustation-libretro\src\retrogl\framebuffer.cpp" />
    <ClCompile Include="..\rustation-libretro\src\retrogl\program.cpp" />
    <ClCompile Include="..\rustation-libretro\src\retrogl\retrogl.cpp" />
    <ClCompile Include="..\rustation-libretro\src\retrogl\shader.cpp" />
    <ClCompile Include="..\rustation-libretro\src\retrogl\texture.cpp" />
    <ClCompile Include="..\rustation-libretro\src\retrogl\vertex.cpp" />
    <ClCompile Include="..\scrc32.c" />
    <ClCompile Include="..\libretro-common\file\retro_stat.c" />
    <ClCompile Include="..\libretro-common\rthreads\rthreads.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsCpp</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsCpp</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsCpp</CompileAs>
    </ClCompile>
    <ClCompile Include="..\libretro-common\streams\file_stream.c" />
    <ClCompile Include="..\mednafen\error.cpp" />
    <ClCompile Include="..\mednafen\file.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsCpp</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsCpp</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsCpp</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\FileStream.cpp" />
    <ClCompile Include="..\mednafen\general.cpp" />
    <ClCompile Include="..\mednafen\md5.c" />
    <ClCompile Include="..\mednafen\mednafen-endian.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsCpp</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsCpp</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsCpp</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\MemoryStream.cpp" />
    <ClCompile Include="..\mednafen\mempatcher.cpp" />
    <ClCompile Include="..\mednafen\settings.cpp" />
    <ClCompile Include="..\mednafen\state.cpp" />
    <ClCompile Include="..\mednafen\Stream.cpp" />
    <ClCompile Include="..\mednafen\psx\cdc.cpp" />
    <ClCompile Include="..\mednafen\psx\cpu.cpp" />
    <ClCompile Include="..\mednafen\psx\dis.cpp" />
    <ClCompile Include="..\mednafen\psx\dma.cpp" />
    <ClCompile Include="..\mednafen\psx\frontio.cpp" />
    <ClCompile Include="..\mednafen\psx\gpu.cpp" />
    <ClCompile Include="..\mednafen\psx\gte.cpp" />
    <ClCompile Include="..\mednafen\psx\irq.cpp" />
    <ClCompile Include="..\mednafen\psx\mdec.cpp" />
    <ClCompile Include="..\mednafen\psx\sio.cpp" />
    <ClCompile Include="..\mednafen\psx\spu.cpp" />
    <ClCompile Include="..\mednafen\psx\timer.cpp" />
    <ClCompile Include="..\mednafen\psx\input\dualanalog.cpp" />
    <ClCompile Include="..\mednafen\psx\input\dualshock.cpp" />
    <ClCompile Include="..\mednafen\psx\input\gamepad.cpp" />
    <ClCompile Include="..\mednafen\psx\input\guncon.cpp" />
    <ClCompile Include="..\mednafen\psx\input\justifier.cpp" />
    <ClCompile Include="..\mednafen\psx\input\memcard.cpp" />
    <ClCompile Include="..\mednafen\psx\input\mouse.cpp" />
    <ClCompile Include="..\mednafen\psx\input\multitap.cpp" />
    <ClCompile Include="..\mednafen\psx\input\negcon.cpp" />
    <ClCompile Include="..\mednafen\video\Deinterlacer.cpp" />
    <ClCompile Include="..\mednafen\video\surface.cpp" />
    <ClCompile Include="..\mednafen\trio\trio.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsCpp</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsCpp</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsCpp</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\trio\triostr.c" />
    <ClCompile Include="..\mednafen\cdrom\audioreader.cpp" />
    <ClCompile Include="..\mednafen\cdrom\CDAccess.cpp" />
    <ClCompile Include="..\mednafen\cdrom\CDAccess_CCD.cpp" />
    <ClCompile Include="..\mednafen\cdrom\CDAccess_Image.cpp" />
    <ClCompile Include="..\mednafen\cdrom\cdromif.cpp" />
    <ClCompile Include="..\mednafen\cdrom\CDUtility.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsCpp</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsCpp</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsCpp</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\cdrom\edc_crc32.c" />
    <ClCompile Include="..\mednafen\cdrom\galois.c" />
    <ClCompile Include="..\mednafen\cdrom\l-ec.c" />
    <ClCompile Include="..\mednafen\cdrom\lec.c" />
    <ClCompile Include="..\mednafen\cdrom\misc.cpp" />
    <ClCompile Include="..\mednafen\cdrom\recover-raw.c" />
    <ClCompile Include="..\mednafen\cdrom\SimpleFIFO.cpp" />
    <ClCompile Include="..\mednafen\tremor\bitwise.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\block.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\codebook.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\floor0.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\floor1.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\framing.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\info.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\mapping0.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\mdct.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\registry.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\res012.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\sharedbook.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\synthesis.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\vorbisfile.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="..\mednafen\tremor\window.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug-2015|Win32'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">CompileAsC</CompileAs>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\rsx\rsx.h" />
    <ClInclude Include="..\rsx\rsx_intf.h" />
    <ClInclude Include="..\rsx\rsx_lib_gl.h" />
    <ClInclude Include="..\rsx\rsx_lib_soft.h" />
    <ClInclude Include="..\rustation-libretro\src\renderer\GlRenderer.h" />
    <ClInclude Include="..\rustation-libretro\src\renderer\shaders\command_fragment.glsl.h" />
    <ClInclude Include="..\rustation-libretro\src\renderer\shaders\command_vertex.glsl.h" />
    <ClInclude Include="..\rustation-libretro\src\renderer\shaders\image_load_fragment.glsl.h" />
    <ClInclude Include="..\rustation-libretro\src\renderer\shaders\image_load_vertex.glsl.h" />
    <ClInclude Include="..\rustation-libretro\src\renderer\shaders\output_fragment.glsl.h" />
    <ClInclude Include="..\rustation-libretro\src\renderer\shaders\output_vertex.glsl.h" />
    <ClInclude Include="..\rustation-libretro\src\retrogl\buffer.h" />
    <ClInclude Include="..\rustation-libretro\src\retrogl\error.h" />
    <ClInclude Include="..\rustation-libretro\src\retrogl\framebuffer.h" />
    <ClInclude Include="..\rustation-libretro\src\retrogl\program.h" />
    <ClInclude Include="..\rustation-libretro\src\retrogl\retrogl.h" />
    <ClInclude Include="..\rustation-libretro\src\retrogl\shader.h" />
    <ClInclude Include="..\rustation-libretro\src\retrogl\texture.h" />
    <ClInclude Include="..\rustation-libretro\src\retrogl\vertex.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
  <!-- ================ UNDUPOBJ ================ -->
  <!-- relevant topics -->
  <!-- http://stackoverflow.com/questions/3729515/visual-studio-2010-2008-cant-handle-source-files-with-identical-names-in-diff/26935613 -->
  <!-- http://stackoverflow.com/questions/7033855/msvc10-mp-builds-not-multicore-across-folders-in-a-project -->
  <!-- http://stackoverflow.com/questions/18304911/how-can-one-modify-an-itemdefinitiongroup-from-an-msbuild-target -->
  <!-- other maybe related info -->
  <!-- http://stackoverflow.com/questions/841913/modify-msbuild-itemgroup-metadata -->
  <UsingTask TaskName="UNDUPOBJ_TASK" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <OutputDir ParameterType="System.String" Required="true" />
      <ItemList ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <OutputItemList ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
    </ParameterGroup>
    <Task>
      <Code><![CDATA[
            //general outline: for each item (in ClCompile) assign it to a subdirectory of $(IntDir) by allocating subdirectories 0,1,2, etc., as needed to prevent duplicate filenames from clobbering each other
            //this minimizes the number of batches that need to be run, since each subdirectory will necessarily be in a distinct batch due to /Fo specifying that output subdirectory

            var assignmentMap = new Dictionary<string,int>();
            foreach( var item in ItemList )
            {
              //solve bug e.g. Checkbox.cpp vs CheckBox.cpp
              var filename = item.GetMetadata("Filename").ToUpperInvariant(); 

              //assign reused filenames to increasing numbers
              //assign previously unused filenames to 0
              int assignment = 0;
              if(assignmentMap.TryGetValue(filename, out assignment))
                assignmentMap[filename] = ++assignment;
              else
                assignmentMap[filename] = 0;

              var thisFileOutdir = Path.Combine(OutputDir,assignment.ToString()) + "/"; //take care it ends in / so /Fo knows it's a directory and not a filename
              item.SetMetadata( "ObjectFileName", thisFileOutdir );
            }

            OutputItemList = ItemList;
            ItemList = new Microsoft.Build.Framework.ITaskItem[0];

        ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="UNDUPOBJ">
    <!-- see stackoverflow topics for discussion on why we need to do some loopy copying stuff here -->
    <ItemGroup>
      <ClCompileCopy Include="@(ClCompile)" />
      <ClCompile Remove="@(ClCompile)" />
    </ItemGroup>
    <UNDUPOBJ_TASK OutputDir="$(IntDir)" ItemList="@(ClCompileCopy)" OutputItemList="@(ClCompile)">
      <Output ItemName="ClCompile" TaskParameter="OutputItemList" />
    </UNDUPOBJ_TASK>
  </Target>
  <!-- ================ UNDUPOBJ ================ -->
</Project>